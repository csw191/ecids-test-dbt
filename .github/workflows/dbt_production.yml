name: dbt Production Run

on:
  schedule:
    - cron: '0 1 * * *'  # Daily at 1 AM UTC
  workflow_dispatch:      # Allows manual trigger
  push:
    branches: [main]

jobs:
  run_dbt:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dbt
        run: |
          pip install dbt-core dbt-snowflake
      
      - name: Setup dbt profile
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
        run: |
          mkdir -p ~/.dbt
          cat > ~/.dbt/profiles.yml << 'EOF'
          shared_snowflake_profile:
            target: prod
            outputs:
              prod:
                type: snowflake
                account: ${SNOWFLAKE_ACCOUNT}
                user: ${SNOWFLAKE_USER}
                password: ${SNOWFLAKE_PASSWORD}
                role: ${SNOWFLAKE_ROLE}
                warehouse: ${SNOWFLAKE_WAREHOUSE}
                database: ${SNOWFLAKE_DATABASE}
                schema: ${SNOWFLAKE_SCHEMA}
                threads: 4
          EOF
          envsubst < ~/.dbt/profiles.yml > ~/.dbt/profiles.yml.tmp
          mv ~/.dbt/profiles.yml.tmp ~/.dbt/profiles.yml

      
      - name: Run dbt
        run: |
          dbt deps
          dbt run
          dbt test
      
      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: dbt-logs
          path: logs/
